# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI
permissions:
  contents: read

on:
  pull_request:
    branches:
      - main
      - review

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    - name: Run linting
      run: yarn lint
    - name: Run unit tests
      run: yarn test
    - name: Build application
      run: yarn build
    - name: Start server in background
      run: |
        node dist/server.js &
        echo $! > server.pid
    - name: Wait for server to be ready
      run: |
        timeout 30 bash -c 'until curl -f http://localhost:8000/; do sleep 1; done'
    - name: Run API tests with Newman
      run: |
        newman run tests/api/api-test-collection.json \
          -e tests/api/environment.json \
          --reporters cli,json \
          --reporter-json-export api-test-results.json
    - name: Stop server
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
          rm server.pid
        fi
      if: always()
    - name: Upload unit tests results
      uses: actions/upload-artifact@v4
      with:
        name: unit-test-results
        path: coverage/
      if: always()
    - name: Upload API tests results
      uses: actions/upload-artifact@v4
      with:
        name: api-test-results
        path: api-test-results.json
      if: always()
